require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const { findTeaByName, findTeaByType } = require('./database');

const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const bot = new TelegramBot(TELEGRAM_BOT_TOKEN, { polling: true });

// –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
const welcomeMessage = `
–ü—Ä–∏–≤–µ—Ç! üëã –Ø ‚Äî —á–∞–π–Ω—ã–π –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å—Å–∫–∞–∂–µ—Ç —Ç–µ–±–µ –≤—Å—ë –æ –ª—é–±–æ–º —á–∞–µ.

–í–æ—Ç —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å:
1. –í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —á–∞—è –¥–ª—è –ø–æ–∏—Å–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–î–∞ –•—É–Ω –ü–∞–æ").
2. –í–≤–µ–¥–∏ —Ç–∏–ø —á–∞—è –¥–ª—è –ø–æ–∏—Å–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–∑–µ–ª–µ–Ω—ã–π"), –∏ —è –ø–æ–∫–∞–∂—É —Å–ø–∏—Å–æ–∫ —á–∞—ë–≤.
3. –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /search –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º.
`;

// –¢–∏–ø—ã —á–∞—è –¥–ª—è –º–µ–Ω—é
const teaTypes = ['–ó–µ–ª–µ–Ω—ã–π', '–ß–µ—Ä–Ω—ã–π', '–£–ª—É–Ω', '–ë–µ–ª—ã–π', '–ü—É—ç—Ä', '–ñ–µ–ª—Ç—ã–π'];

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, welcomeMessage);
});

// –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ —Ç–∏–ø—É
bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;

  // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
  if (text.startsWith('/')) return;

  // –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
  findTeaByName(text, (err, row) => {
    if (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —á–∞—è:', err);
      bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.');
      return;
    }

    if (row) {
      sendTeaInfo(chatId, row);
    } else {
      // –ï—Å–ª–∏ —á–∞–π –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–±—É–µ–º –ø–æ–∏—Å–∫ –ø–æ —Ç–∏–ø—É
      findTeaByType(text, (err, rows) => {
        if (err) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —á–∞—è:', err);
          bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.');
          return;
        }

        if (rows.length > 0) {
          sendTeaList(chatId, rows);
        } else {
          bot.sendMessage(chatId, '–ß–∞–π –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /search.');
        }
      });
    }
  });
});

// –ö–æ–º–∞–Ω–¥–∞ /search
bot.onText(/\/search/, (msg) => {
  const chatId = msg.chat.id;
  const searchMenu = {
    reply_markup: {
      inline_keyboard: teaTypes.map((type) => [{ text: type, callback_data: `type_${type}` }])
    }
  };
  bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —á–∞—è:', searchMenu);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
bot.on('callback_query', (query) => {
  const chatId = query.message.chat.id;
  const data = query.data;

  if (data.startsWith('type_')) {
    // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —Ç–∏–ø —á–∞—è
    const type = data.replace('type_', '');
    findTeaByType(type, (err, rows) => {
      if (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —á–∞—è:', err);
        bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.');
        return;
      }

      if (rows.length > 0) {
        sendTeaList(chatId, rows);
      } else {
        bot.sendMessage(chatId, '–ß–∞–π –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /search.');
      }
    });
  } else if (data.startsWith('tea_')) {
    // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —á–∞—è
    const teaName = data.split('_')[1];
    findTeaByName(teaName, (err, row) => {
      if (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —á–∞—è:', err);
        bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.');
        return;
      }

      if (row) {
        sendTeaInfo(chatId, row);
      } else {
        bot.sendMessage(chatId, '–ß–∞–π –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.');
      }
    });
  }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞–µ
const sendTeaInfo = (chatId, tea) => {
  const { –Ω–∞–∑–≤–∞–Ω–∏–µ, —Ç–∏–ø, —Ä–µ–≥–∏–æ–Ω, –º–µ—Ç–æ–¥_–æ–±—Ä–∞–±–æ—Ç–∫–∏, –∫—É–ª—å—Ç–∏–≤–∞—Ä, –∏—Å—Ç–æ—Ä–∏—è, –ø–æ–ª—å–∑–∞, –∑–∞–≤–∞—Ä–∏–≤–∞–Ω–∏–µ, –∞—Ä–æ–º–∞—Ç, —Ü–µ–Ω–∞ } = tea;
  const answer = `
<b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> ${–Ω–∞–∑–≤–∞–Ω–∏–µ}  
<b>–¢–∏–ø:</b> ${—Ç–∏–ø}  
<b>–†–µ–≥–∏–æ–Ω:</b> ${—Ä–µ–≥–∏–æ–Ω}  
<b>–ú–µ—Ç–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏:</b> ${–º–µ—Ç–æ–¥_–æ–±—Ä–∞–±–æ—Ç–∫–∏}  
<b>–ö—É–ª—å—Ç–∏–≤–∞—Ä:</b> ${–∫—É–ª—å—Ç–∏–≤–∞—Ä}  

<b>–ò—Å—Ç–æ—Ä–∏—è:</b> ${–∏—Å—Ç–æ—Ä–∏—è}  

<b>–ü–æ–ª—å–∑–∞:</b>  
- ${–ø–æ–ª—å–∑–∞.split(', ').join('\n- ')}  

<b>–ó–∞–≤–∞—Ä–∏–≤–∞–Ω–∏–µ:</b>  
- –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–¥—ã: ${–∑–∞–≤–∞—Ä–∏–≤–∞–Ω–∏–µ.split(', ')[0]}  
- –í—Ä–µ–º—è –∑–∞–≤–∞—Ä–∏–≤–∞–Ω–∏—è: ${–∑–∞–≤–∞—Ä–∏–≤–∞–Ω–∏–µ.split(', ')[1]}  

<b>–ê—Ä–æ–º–∞—Ç:</b> ${–∞—Ä–æ–º–∞—Ç}  

<b>–¶–µ–Ω–∞:</b> ${—Ü–µ–Ω–∞}
  `;
  bot.sendMessage(chatId, answer, { parse_mode: 'HTML' });
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ø–∏—Å–∫–∞ —á–∞—ë–≤
const sendTeaList = (chatId, teas) => {
  const teaButtons = teas.map((tea) => [{ text: tea.–Ω–∞–∑–≤–∞–Ω–∏–µ, callback_data: `tea_${tea.–Ω–∞–∑–≤–∞–Ω–∏–µ}` }]);
  const teaMenu = {
    reply_markup: {
      inline_keyboard: teaButtons
    }
  };
  bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ —á–∞–π:', teaMenu);
};

console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...');